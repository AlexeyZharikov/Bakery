{"ast":null,"code":"var _jsxFileName = \"/Users/alexey/Projects/bakery/src/components/popup.component/popup.component.jsx\";\n// import { useEffect, useState } from \"react\";\nimport './popup.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = props => {\n  // const [show, setShow] = useState(true);\n  // useEffect(()=>{\n  //   setTimeout(()=>{\n  //     setShow(true)\n  //   }, 2000)\n  // }, [])\n  return props.trigger ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pop-up\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pop-up_inner\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this) : \"\";\n};\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["Popup","props","trigger"],"sources":["/Users/alexey/Projects/bakery/src/components/popup.component/popup.component.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\nimport './popup.scss';\n\nconst Popup = (props) => {\n  // const [show, setShow] = useState(true);\n  // useEffect(()=>{\n  //   setTimeout(()=>{\n  //     setShow(true)\n  //   }, 2000)\n  // }, [])\n  return (props.trigger) ? (\n    <div className=\"pop-up\">\n      <div className=\"pop-up_inner\">\n        <button className=\"close\">X</button>\n      </div>\n    </div>\n  ) : \"\"\n} \n\nexport default Popup;"],"mappings":";AAAA;AACA,OAAO,cAAc;AAAC;AAEtB,MAAMA,KAAK,GAAIC,KAAK,IAAK;EACvB;EACA;EACA;EACA;EACA;EACA;EACA,OAAQA,KAAK,CAACC,OAAO,gBACnB;IAAK,SAAS,EAAC,QAAQ;IAAA,uBACrB;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAQ,SAAS,EAAC,OAAO;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA;EAChC;IAAA;IAAA;IAAA;EAAA,QACF,GACJ,EAAE;AACR,CAAC;AAAA,KAdKF,KAAK;AAgBX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}